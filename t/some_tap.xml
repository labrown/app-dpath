<opt>
  <anon end_time="1240775791.09503"
        exit="0"
        has_problems="2"
        is_good_plan="0"
        plan="1..6"
        skip_all=""
        start_time="1240775791.09178"
        tests_planned="6"
        tests_run="8"
        version="13">
    <lines as_string="TAP version 13"
           has_skip="0"
           has_todo="0"
           is_actual_ok="0"
           is_bailout="0"
           is_comment="0"
           is_plan="0"
           is_pragma="0"
           is_test="0"
           is_unknown="0"
           is_version="1"
           is_yaml="0"
           raw="TAP version 13" />
    <lines as_string="1..6"
           has_skip="0"
           has_todo="0"
           is_actual_ok="0"
           is_bailout="0"
           is_comment="0"
           is_plan="1"
           is_pragma="0"
           is_test="0"
           is_unknown="0"
           is_version="0"
           is_yaml="0"
           raw="1..6" />
    <lines as_string="ok 1 - use Data::DPath;"
           description="- use Data::DPath;"
           directive=""
           explanation=""
           has_skip="0"
           has_todo="0"
           is_actual_ok="0"
           is_bailout="0"
           is_comment="0"
           is_ok="1"
           is_plan="0"
           is_pragma="0"
           is_test="1"
           is_unknown="0"
           is_unplanned="0"
           is_version="0"
           is_yaml="0"
           number="1"
           raw="ok 1 - use Data::DPath;"
           type="test">
      <_children as_string="   ---
     - name: 'Hash one'
       value: 1
     - name: 'Hash two'
       value: 2
   ..."
                 has_skip="0"
                 has_todo="0"
                 is_actual_ok="0"
                 is_bailout="0"
                 is_comment="0"
                 is_plan="0"
                 is_pragma="0"
                 is_test="0"
                 is_unknown="0"
                 is_version="0"
                 is_yaml="1"
                 raw="   ---
     - name: 'Hash one'
       value: 1
     - name: 'Hash two'
       value: 2
   ...">
        <data name="Hash one"
              value="1" />
        <data name="Hash two"
              value="2" />
      </_children>
    </lines>
    <lines as_string="ok 2 - KEYs + PARENT"
           description="- KEYs + PARENT"
           directive=""
           explanation=""
           has_skip="0"
           has_todo="0"
           is_actual_ok="0"
           is_bailout="0"
           is_comment="0"
           is_ok="1"
           is_plan="0"
           is_pragma="0"
           is_test="1"
           is_unknown="0"
           is_unplanned="0"
           is_version="0"
           is_yaml="0"
           number="2"
           raw="ok 2 - KEYs + PARENT"
           type="test" />
    <lines as_string="ok 3 - quoted KEY containg slash"
           description="- quoted KEY containg slash"
           directive=""
           explanation=""
           has_skip="0"
           has_todo="0"
           is_actual_ok="0"
           is_bailout="0"
           is_comment="0"
           is_ok="1"
           is_plan="0"
           is_pragma="0"
           is_test="1"
           is_unknown="0"
           is_unplanned="0"
           is_version="0"
           is_yaml="0"
           number="3"
           raw="ok 3 - quoted KEY containg slash"
           type="test" />
    <lines as_string="pragma +strict"
           has_skip="0"
           has_todo="0"
           is_actual_ok="0"
           is_bailout="0"
           is_comment="0"
           is_plan="0"
           is_pragma="1"
           is_test="0"
           is_unknown="0"
           is_version="0"
           is_yaml="0"
           raw="pragma +strict" />
    <lines as_string="not ok 4 # TODO spec only"
           description=""
           directive="TODO"
           explanation="spec only"
           has_skip="0"
           has_todo="1"
           is_actual_ok="0"
           is_bailout="0"
           is_comment="0"
           is_ok="1"
           is_plan="0"
           is_pragma="0"
           is_test="1"
           is_unknown="0"
           is_unplanned="0"
           is_version="0"
           is_yaml="0"
           number="4"
           raw="not ok 4 # TODO spec only"
           type="test">
      <_children as_string="#   Failed (TODO) test at t/data_dpath.t line 144."
                 has_skip="0"
                 has_todo="0"
                 is_actual_ok="0"
                 is_bailout="0"
                 is_comment="1"
                 is_plan="0"
                 is_pragma="0"
                 is_test="0"
                 is_unknown="0"
                 is_version="0"
                 is_yaml="0"
                 raw="#   Failed (TODO) test at t/data_dpath.t line 144." />
      <_children as_string="#     Structures begin differing at:"
                 has_skip="0"
                 has_todo="0"
                 is_actual_ok="0"
                 is_bailout="0"
                 is_comment="1"
                 is_plan="0"
                 is_pragma="0"
                 is_test="0"
                 is_unknown="0"
                 is_version="0"
                 is_yaml="0"
                 raw="#     Structures begin differing at:" />
      <_children as_string="#          $got-&gt;[0] = Does not exist"
                 has_skip="0"
                 has_todo="0"
                 is_actual_ok="0"
                 is_bailout="0"
                 is_comment="1"
                 is_plan="0"
                 is_pragma="0"
                 is_test="0"
                 is_unknown="0"
                 is_version="0"
                 is_yaml="0"
                 raw="#          $got-&gt;[0] = Does not exist" />
      <_children as_string="#     $expected-&gt;[0] = ARRAY(0x8e4c238)"
                 has_skip="0"
                 has_todo="0"
                 is_actual_ok="0"
                 is_bailout="0"
                 is_comment="1"
                 is_plan="0"
                 is_pragma="0"
                 is_test="0"
                 is_unknown="0"
                 is_version="0"
                 is_yaml="0"
                 raw="#     $expected-&gt;[0] = ARRAY(0x8e4c238)" />
    </lines>
    <lines as_string="ok 5 - ANYWHERE + KEY + FILTER int # TODO spec only"
           description="- ANYWHERE + KEY + FILTER int"
           directive="TODO"
           explanation="spec only"
           has_skip="0"
           has_todo="1"
           is_actual_ok="1"
           is_bailout="0"
           is_comment="0"
           is_ok="1"
           is_plan="0"
           is_pragma="0"
           is_test="1"
           is_unknown="0"
           is_unplanned="0"
           is_version="0"
           is_yaml="0"
           number="5"
           raw="ok 5 - ANYWHERE + KEY + FILTER int # TODO spec only"
           type="test" />
    <lines as_string="ok 6 # SKIP rethink twice"
           description=""
           directive="SKIP"
           explanation="rethink twice"
           has_skip="1"
           has_todo="0"
           is_actual_ok="0"
           is_bailout="0"
           is_comment="0"
           is_ok="1"
           is_plan="0"
           is_pragma="0"
           is_test="1"
           is_unknown="0"
           is_unplanned="0"
           is_version="0"
           is_yaml="0"
           number="6"
           raw="ok 6 # skip rethink twice"
           type="test" />
    <lines as_string="not ok 7 # TODO spec only"
           description=""
           directive="TODO"
           explanation="spec only"
           has_skip="0"
           has_todo="1"
           is_actual_ok="0"
           is_bailout="0"
           is_comment="0"
           is_ok="0"
           is_plan="0"
           is_pragma="0"
           is_test="1"
           is_unknown="0"
           is_unplanned="1"
           is_version="0"
           is_yaml="0"
           number="7"
           raw="not ok 7 # TODO spec only"
           type="test">
      <_children as_string="#   Failed (TODO) test at t/data_dpath.t line 356."
                 has_skip="0"
                 has_todo="0"
                 is_actual_ok="0"
                 is_bailout="0"
                 is_comment="1"
                 is_plan="0"
                 is_pragma="0"
                 is_test="0"
                 is_unknown="0"
                 is_version="0"
                 is_yaml="0"
                 raw="#   Failed (TODO) test at t/data_dpath.t line 356." />
      <_children as_string="#     Structures begin differing at:"
                 has_skip="0"
                 has_todo="0"
                 is_actual_ok="0"
                 is_bailout="0"
                 is_comment="1"
                 is_plan="0"
                 is_pragma="0"
                 is_test="0"
                 is_unknown="0"
                 is_version="0"
                 is_yaml="0"
                 raw="#     Structures begin differing at:" />
      <_children as_string="#          $got-&gt;[0] = Does not exist"
                 has_skip="0"
                 has_todo="0"
                 is_actual_ok="0"
                 is_bailout="0"
                 is_comment="1"
                 is_plan="0"
                 is_pragma="0"
                 is_test="0"
                 is_unknown="0"
                 is_version="0"
                 is_yaml="0"
                 raw="#          $got-&gt;[0] = Does not exist" />
      <_children as_string="#     $expected-&gt;[0] = 'interesting value'"
                 has_skip="0"
                 has_todo="0"
                 is_actual_ok="0"
                 is_bailout="0"
                 is_comment="1"
                 is_plan="0"
                 is_pragma="0"
                 is_test="0"
                 is_unknown="0"
                 is_version="0"
                 is_yaml="0"
                 raw="#     $expected-&gt;[0] = 'interesting value'" />
    </lines>
    <lines as_string="ok 8 - FILTER eval regex # TODO too dirty, first cleanup _filter_eval"
           description="- FILTER eval regex"
           directive="TODO"
           explanation="too dirty, first cleanup _filter_eval"
           has_skip="0"
           has_todo="1"
           is_actual_ok="1"
           is_bailout="0"
           is_comment="0"
           is_ok="0"
           is_plan="0"
           is_pragma="0"
           is_test="1"
           is_unknown="0"
           is_unplanned="1"
           is_version="0"
           is_yaml="0"
           number="8"
           raw="ok 8 - FILTER eval regex # TODO too dirty, first cleanup _filter_eval"
           type="test" />
    <parse_errors>Bad plan.  You planned 6 tests but ran 8.</parse_errors>
    <pragmas>strict</pragmas>
    <summary all_passed="0"
             elapsed_timestr=" 0 wallclock secs ( 0.00 usr +  0.00 sys =  0.00 CPU)"
             exit="0"
             failed="2"
             has_errors="1"
             has_problems="1"
             parse_errors="1"
             passed="6"
             skipped="1"
             status="FAIL"
             todo="4"
             todo_passed="2"
             total="8"
             wait="0">
      <elapsed>0</elapsed>
      <elapsed>0</elapsed>
      <elapsed>0</elapsed>
      <elapsed>0</elapsed>
      <elapsed>0</elapsed>
      <elapsed>0</elapsed>
    </summary>
  </anon>
</opt>
